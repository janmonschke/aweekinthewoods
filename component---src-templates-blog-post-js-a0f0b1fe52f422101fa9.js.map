{"version":3,"file":"component---src-templates-blog-post-js-a0f0b1fe52f422101fa9.js","mappings":"uNAiFA,EApEuB,SAAH,GAAkB,IAAZA,EAAI,EAAJA,KAClBC,GAAOC,EAAAA,EAAAA,gBAAe,cAepBC,EAAWF,EAAKG,KAAKC,aAArBF,OACR,OACE,kCAAQG,MAAK,kBAAOC,EAAAA,EAAAA,KAAM,MACvBP,GAAQ,kDAAkBA,GAC3B,+BACEM,MAAO,CACLE,QAAQ,SAGV,wBAAC,EAAAC,EAAW,CACVC,MAAOT,EAAKU,OAAOC,gBAAgBC,gBACnCC,IAAKX,EACLG,MAAO,CACLS,aAAaC,EAAAA,EAAAA,IAAO,IACpBC,aAAc,EACdC,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,6BAAGb,MAAO,CAAEW,aAAc,UAAU,cACvB,sCAASd,GAAiB,oHAEpB,IACjB,6BAAGkB,KAAK,0BAA0BC,OAAO,UAAQ,mBAE5C,IAAG,oBACU,IAClB,6BACED,KAAK,sCACLC,OAAO,SACPC,IAAI,MAAI,eAGL,IAAG,KACL,IACH,6BACEF,KAAK,iCACLC,OAAO,SACPC,IAAI,cAAY,cAGd,MAMd,E,iBCJA,EAjEyB,SAAH,GAAyC,IAAD,QAAlCtB,EAAI,EAAJA,KAAMuB,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SACvCC,EAAOzB,EAAK0B,eACZC,EAAY3B,EAAKG,KAAKC,aAAawB,MACjCC,EAA6BN,EAA7BM,SAAUC,EAAmBP,EAAnBO,KAAMC,EAAaR,EAAbQ,SACxB,EAA+BN,EAAKO,YAA5BC,EAAK,EAALA,MAAOL,EAAK,EAALA,MAAO7B,EAAI,EAAJA,KAChBmC,EACJD,SAAsB,QAAjB,EAALA,EAAOtB,uBAAe,OAAiB,QAAjB,EAAtB,EAAwBC,uBAAe,OAAQ,QAAR,EAAvC,EAAyCuB,cAAM,OAAU,QAAV,EAA/C,EAAiDC,gBAAQ,WAApD,EAAL,EAA2DC,IAC7D,OACE,wBAAC,IAAM,CAACb,SAAUA,EAAUI,MAAOD,EAAWW,UAAU,YACtD,wBAAC,IAAG,CACFV,MAAOA,EACPW,YAAad,EAAKe,QAClBC,SAAUP,EACVQ,eAAgBX,IAElB,uCACE,kCAAQ1B,MAAO,CAAEsC,UAAW,WAC1B,8BACEtC,MAAO,CACLuC,WAAW7B,EAAAA,EAAAA,IAAO,GAClBC,cAAcD,EAAAA,EAAAA,IAAO,KAGtBU,EAAKO,YAAYJ,QAGtB,mCACEiB,wBAAyB,CAAEC,OAAQrB,EAAKsB,MACxC1C,MAAO,CAAEW,cAAcD,EAAAA,EAAAA,IAAO,MAEhC,+BAAKV,MAAO,CAAEW,cAAcD,EAAAA,EAAAA,IAAO,KACjC,wBAAC,EAAc,CAAChB,KAAMA,MAI1B,mCACE,8BACEM,MAAO,CACLE,QAAQ,OACRyC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,kCACGtB,GACC,wBAAC,EAAAuB,KAAI,CAACC,GAAIxB,EAASyB,OAAOC,KAAMjC,IAAI,QAAM,KACrCO,EAASG,YAAYJ,QAI9B,kCACGE,GACC,wBAAC,EAAAsB,KAAI,CAACC,GAAIvB,EAAKwB,OAAOC,KAAMjC,IAAI,QAC7BQ,EAAKE,YAAYJ,MAAK,SAQvC,C","sources":["webpack://a-week-in-the-woods/./src/components/blogpost-footer.js","webpack://a-week-in-the-woods/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { rhythm, scale } from \"../utils/typography\";\n\nconst BlogPostFooter = ({ date }) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 80, height: 80)\n        }\n      }\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `);\n\n  const { author } = data.site.siteMetadata;\n  return (\n    <footer style={{ ...scale(-1 / 10) }}>\n      {date && <p>Published on: {date}</p>}\n      <div\n        style={{\n          display: `flex`,\n        }}\n      >\n        <GatsbyImage\n          image={data.avatar.childImageSharp.gatsbyImageData}\n          alt={author}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            minWidth: 80,\n            borderRadius: `100%`,\n          }}\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n        <p style={{ marginBottom: \"0.1em\" }}>\n          Written by <strong>{author}</strong>, an avid hiker living in Berlin,\n          which is way too far away from the mountains. You can find his\n          personal blog at{\" \"}\n          <a href=\"https://janmonschke.com\" target=\"_blank\">\n            janmonschke.com\n          </a>{\" \"}\n          and follow him on{\" \"}\n          <a\n            href=\"https://indieweb.social/@thedeftone\"\n            target=\"_blank\"\n            rel=\"me\"\n          >\n            üêò Mastodon\n          </a>{\" \"}\n          or{\" \"}\n          <a\n            href=\"https://twitter.com/thedeftone\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            üê¶ Twitter\n          </a>\n          .\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default BlogPostFooter;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport BlogPostFooter from \"../components/blogpost-footer\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nimport \"./blog-post.css\";\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next, iso_date } = pageContext;\n  const { cover, title, date } = post.frontmatter;\n  const coverImg =\n    cover?.childImageSharp?.gatsbyImageData?.images?.fallback?.src;\n  return (\n    <Layout location={location} title={siteTitle} className=\"blogPost\">\n      <Seo\n        title={title}\n        description={post.excerpt}\n        coverSrc={coverImg}\n        published_time={iso_date}\n      />\n      <article>\n        <header style={{ textAlign: \"center\" }}>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          style={{ marginBottom: rhythm(2) }}\n        />\n        <div style={{ marginBottom: rhythm(2) }}>\n          <BlogPostFooter date={date} />\n        </div>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 300)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FIXED)\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["date","data","useStaticQuery","author","site","siteMetadata","style","scale","display","G","image","avatar","childImageSharp","gatsbyImageData","alt","marginRight","rhythm","marginBottom","minWidth","borderRadius","imgStyle","href","target","rel","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","iso_date","frontmatter","cover","coverImg","images","fallback","src","className","description","excerpt","coverSrc","published_time","textAlign","marginTop","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug"],"sourceRoot":""}